name: Deploy - Waiting Approval then Deploy

env:
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}

on:
  workflow_dispatch:
    inputs:
      approve:
        type: choice
        description: 'Do you approve the deployment?'
        options:
          - yes
          - no
        required: true
        default: 'no'

jobs:
  deploy:
    if: github.event.inputs.approve == 'yes'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Wait for status check of build-and-test-with-cache
        id: check-status
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.REPO_ACCESS_TOKEN }}
          script: |
            async function checkStatus() {
              const { context, github } = require('@actions/github');
              const ref = context.ref;
              const owner = context.repo.owner;
              const repo = context.repo.repo;

              console.log('Checking status of build-and-test-with-cache job...');
              for (let attempt = 0; attempt < 10; attempt++) {
                console.log(`Attempt ${attempt + 1} to check the status...`);
                const checkRunsResponse = await github.rest.repos.getCombinedStatusForRef({
                  owner,
                  repo,
                  ref,
                });

                const statusChecks = checkRunsResponse.data.statuses.filter(
                  (check) => check.context === 'build-and-test-with-cache'
                );

                if (statusChecks.length > 0) {
                  const statusCheck = statusChecks[0];
                  if (statusCheck.state === 'success') {
                    console.log('Status check passed successfully.');
                    process.env.STATUS_CHECK_PASSED = 'true';
                    return;
                  } else {
                    console.log(`Status check state: ${statusCheck.state}`);
                  }
                } else {
                  console.log('Status check not found.');
                }
                await new Promise((resolve) => setTimeout(resolve, 10000)); // Wait for 10 seconds before the next attempt
              }
              throw new Error('Required status check "build-and-test-with-cache" not found or did not pass.');
            }
            await checkStatus();

      - name: Setup Node Environment
        if: env.STATUS_CHECK_PASSED == 'true'
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Restore build cache
        if: env.STATUS_CHECK_PASSED == 'true'
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            dist
          key: ${{ env.KEY_CACHE }}
          restore-keys: |
            ${{ env.RESTORE_KEYS }}
            ${{ env.OS_VM }}

      - name: Deploy to GitHub Pages
        if: env.STATUS_CHECK_PASSED == 'true'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.REPO_ACCESS_TOKEN }}
          publish_dir: ./dist

