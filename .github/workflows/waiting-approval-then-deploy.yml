name: Deploy - Waiting Approval then Deploy

env:
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}

on:
  workflow_dispatch:
    inputs:
      approve:
        description: 'Do you approve the deployment?'
        required: true
        default: 'yes'

jobs:
  deploy:
    if: github.event.inputs.approve == 'yes'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Wait for status check of build-and-test-with-cache (branch rule)
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.REPO_ACCESS_TOKEN }}
          script: |
            const ref = 'refs/heads/main';
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            const checkRunsResponse = await github.rest.repos.getCombinedStatusForRef({
              owner,
              repo,
              ref,
            });

            const statusChecks = checkRunsResponse.data.statuses.filter(
              (check) => check.context === 'build-and-test-with-cache'
            );

            if (statusChecks.length === 0) {
              throw new Error('Required status check "build-and-test-with-cache" not found.');
            }

            const statusCheck = statusChecks[0];

            if (statusCheck.state !== 'success') {
              throw new Error(`Status check "build-and-test-with-cache" has not passed. State: ${statusCheck.state}`);
            }

            console.log('Status check passed successfully.');
            process.env.STATUS_CHECK_PASSED = 'true';

      - name: Setup Node Environment
        if: env.STATUS_CHECK_PASSED == 'true'
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Restore build cache
        if: env.STATUS_CHECK_PASSED == 'true'
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            dist
          key: ${{ env.KEY_CACHE }}
          restore-keys: |
            ${{ env.RESTORE_KEYS }}
            ${{ env.OS_VM }}

      - name: Deploy to GitHub Pages
        if: env.STATUS_CHECK_PASSED == 'true'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.REPO_ACCESS_TOKEN }}
          publish_dir: ./dist
