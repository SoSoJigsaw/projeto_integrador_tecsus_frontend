name: Deploy - Waiting Approval then Deploy

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}

on:
  workflow_dispatch:
    inputs:
      approve:
        options:
          - 'yes'
          - 'no'
        description: 'Do you approve the deployment?'
        required: true
        default: 'yes'

jobs:
  wait-for-status-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Wait for status check of build-and-test-with-cache (branch rule)
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.REPO_ACCESS_TOKEN }}
          script: |
            const ref = 'heads/main';
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            const checkRuns = await github.rest.checks.listForRef({
              owner,
              repo,
              ref,
            });

            const statusChecks = checkRuns.data.check_runs.filter(
              (check) => check.name === 'build-and-test-with-cache'
            );

            if (statusChecks.length === 0) {
              throw new Error('Required status check "build-and-test-with-cache" not found.');
            }

            const statusCheck = statusChecks[0];

            if (statusCheck.conclusion !== 'success') {
              throw new Error(`Status check "build-and-test-with-cache" has not passed. Conclusion: ${statusCheck.conclusion}`);
            }

  deploy-on-github-pages:
    runs-on: ubuntu-latest
    needs: [wait-for-status-check]

    steps:

      - name: Set up cache variables
        id: cache-vars
        run: |
          echo "Setting up cache variables..."
          echo "OS_VM=${{ runner.os }}-node-" >> $GITHUB_ENV
          echo "KEY_CACHE=${{ runner.os }}-node-${{ hashFiles('**/package-lock.json', '**/package.json', '**/vitest.config.ts', '**/vite.config.ts', '**/tsconfig.vitest.json', '**/tsconfig.node.json', '**/tsconfig.json', '**/tsconfig.app.json', '**/env.d.ts', '**/src/main.ts', '**/src/router/index.ts', '**/update-version.cjs') }}" >> $GITHUB_ENV
          echo "RESTORE_KEYS=${{ runner.os }}-node-${{ hashFiles('**/package-lock.json', '**/package.json') }}" >> $GITHUB_ENV
          echo "Cache variables set."

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node Environment
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ env.KEY_CACHE }}
          restore-keys: |
            ${{ env.RESTORE_KEYS }}
            ${{ env.OS_VM }}
          upload-chunk-size: 262144

      - name: Install dependencies
        run: npm install

      - name: Audit and fix vulnerabilities
        run: npm audit fix

      - name: Run build
        run: npm run build
        
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
