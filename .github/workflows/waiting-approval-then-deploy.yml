name: CI Pipeline - Waiting Approval then Deploy

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  workflow_dispatch:
    inputs:
      approve:
        description: 'Do you approve the deployment?'
        required: true
        default: 'yes'
  workflow_run:
    workflows: ["CI Pipeline - Build and Test"]
    types:
      - completed

jobs:

  deploy-on-github-pages:
    if: ${{ github.event.inputs.approve == 'yes' || (github.event.workflow_run.conclusion == 'success' && github.event.inputs.approve == 'yes') }}
    runs-on: ubuntu-latest
    
    steps:

      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build
          path: ./dist

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist

  build-and-test-with-cache:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.approve == 'yes'
    runs-on: ubuntu-latest

    steps:
    
      - name: Set up cache variables
        id: cache-vars
        run: |
          echo "OS_VM=${{ runner.os }}-node-" >> $GITHUB_ENV
          echo "KEY_CACHE=${{ runner.os }}-node-${{ hashFiles('**/package-lock.json', '**/package.json', '**/vitest.config.ts', '**/vite.config.ts', '**/tsconfig.vitest.json', '**/tsconfig.node.json', '**/tsconfig.json', '**/tsconfig.app.json', '**/env.d.ts', '**/.eslintrc.cjs', '**/src/main.ts', '**/jest.config.js', '**/src/router/index.ts') }}" >> $GITHUB_ENV
          echo "RESTORE_KEYS=${{ runner.os }}-node-${{ hashFiles('**/package-lock.json', '**/package.json') }}" >> $GITHUB_ENV

      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Setup Node Environment
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ env.KEY_CACHE }}
          restore-keys: |
            ${{ env.RESTORE_KEYS }}
            ${{ env.OS_VM }}
          upload-chunk-size: 262144

      - name: Install dependencies
        run: npm install

      - name: Run build
        run: npm run build

      - name: Run unit tests
        run: npm run test

      - name: Run coverage
        run: npm run coverage

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Install SonarQube Scanner
        run: npm run install-sonar-scanner

      - name: Execute sonnar-scanner at the project and save in SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=quarks-team_projeto_integrador_tecsus_frontend \
            -Dsonar.organization=quarks-team1 \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov-report/lcov.info

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: ./dist
