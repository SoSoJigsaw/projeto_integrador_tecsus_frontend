name: CI Pipeline - Build and Test

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

on:
  pull_request:
    branches: [main, previous]
  push:
    branches: [main, previous]

jobs:
  build-and-test-with-cache:
    runs-on: ubuntu-latest

    steps:
      - name: Set up cache variables
        id: cache-vars
        run: |
          echo "Setting up cache variables..."
          echo "OS_VM=${{ runner.os }}-node-" >> $GITHUB_ENV
          echo "KEY_CACHE=${{ runner.os }}-node-${{ hashFiles('**/package-lock.json', '**/package.json', '**/vitest.config.ts', '**/vite.config.ts', '**/tsconfig.vitest.json', '**/tsconfig.node.json', '**/tsconfig.json', '**/tsconfig.app.json', '**/env.d.ts', '**/src/main.ts', '**/src/router/index.ts', '**/update-version.cjs') }}" >> $GITHUB_ENV
          echo "RESTORE_KEYS=${{ runner.os }}-node-${{ hashFiles('**/package-lock.json', '**/package.json') }}" >> $GITHUB_ENV
          echo "Cache variables set."

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node Environment
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ env.KEY_CACHE }}
          restore-keys: |
            ${{ env.RESTORE_KEYS }}
            ${{ env.OS_VM }}
          upload-chunk-size: 262144

      - name: Install dependencies
        run: npm install

      - name: Audit and fix vulnerabilities
        run: npm audit fix

      - name: Remove existing snapshots
        run: npm run pretest

      - name: Run unit tests and coverage
        run: npm run coverage

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Install SonarQube Scanner
        run: npm run install-sonar-scanner

      - name: Execute sonar-scanner at the project and save in SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=projeto_integrador_tecsus_frontend \
            -Dsonar.organization=quarks-devops \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info

      - name: Publish test results
        uses: actions/upload-artifact@v4
        with:
          name: unit-tests-results
          path: test-results.xml

      - name: Publish code coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-results
          path: coverage/

      - name: Publish SonarQube scanner results
        uses: actions/upload-artifact@v4
        with:
          name: sonar-scanner-results
          path: .scannerwork/

  update-code-version:
    runs-on: ubuntu-latest
    needs: [build-and-test-with-cache]

    steps:

      - name: Store Status Check
        id: store_status_check
        run: echo "true" > status_check.txt
        if: ${{ always() }}

      - name: Upload Status Check File
        uses: actions/upload-artifact@v4
        with:
          name: status-check
          path: status_check.txt
